[bed_mesh]
; compensate real coords for bltouch offset
speed: 120
horizontal_move_z: 5
mesh_min: 30,30
mesh_max: 195,195
probe_count: 5,5
algorithm: bicubic
fade_start: 0.6
fade_end: 10
fade_target: 0
; relative_reference_index = ()(x points * y points) - 1) / 2
relative_reference_index: 12

[bed_screws]
screw1: 30,30
screw1_name: front left screw
screw2: 30,205
screw2_name: rear left screw
screw3: 195,205
screw3_name: rear right screw
screw4: 195,35
screw4_name: front right screw

[screws_tilt_adjust]
screw1: 75,205
screw1_name: rear left screw
screw2: 75,35
screw2_name: front left screw
screw3: 245,205
screw3_name: rear right screw
screw4: 245,35
screw4_name: front right screw
horizontal_move_z: 5
speed: 50
screw_thread: CW-M4



[z_tilt]
# Ender screw edge offsets are 35,35
# z_positions = IRL position of the stepper itself, in nozzle coords so will be off the bed at the back
# points = probe locations = nozzle + probe offset
# stepper X are 30mm off bed edge left & right
# stepper Y is 80 off the back when nozzle at Y=230 = 230+80
z_positions:
	-30, 310       ##Stepper Location Z0, as if the nozzle were in the screw
	265, 310       ##Stepper Location Z1, as if the nozzle were in the screw
points:
    73, 117
    238, 117
speed: 200
horizontal_move_z: 8
retries: 20
retry_tolerance: 0.01

[gcode_macro Z_UP]
gcode:
    {% set Z = params.Z|default(0.01) %}
    SET_GCODE_OFFSET Z_ADJUST={Z} MOVE=1

[gcode_macro Z_DOWN]
gcode:
    {% set Z = params.Z|default(-0.01) %}
    SET_GCODE_OFFSET Z_ADJUST={Z} MOVE=1

#==============================================
# BED_MESH_ADD
#==============================================
[gcode_macro BED_MESH_ADD]
gcode:
    M117 Meshing
    {% set BED_TEMP = params.BED_TEMP|default(30) %}
    M117 CREATING BED MESH
    M140 S{BED_TEMP} ;start heating

    _CG28 ; Conditional homing
    M190 S{BED_TEMP} ;wait heating

    M117 CREATING BED MESH
    BED_MESH_CALIBRATE

    # save bed to config and trigger config save and restart after the print
    BED_MESH_PROFILE SAVE={BED_TEMP}

    M117 BED MESH FINISHED
    SAVE_AT_END

[gcode_macro BED_MESH_PLANNED]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(0) %}
    {% if printer.configfile.config["bed_mesh " + BED_TEMP] is defined and FORCE|int == 0 %}
        {action_respond_info("FOUND existing bed_mesh "+ BED_TEMP)}
    {% else %}
        {action_respond_info("NOT found bed_mesh " + BED_TEMP)}
    {% endif %}

#==============================================
# BED_MESH_TEMP
#==============================================
[gcode_macro BED_MESH_TEMP]
gcode:
    {% set BED_TEMP = params.BED_TEMP|default(0) %}
    {% set FORCE = params.FORCE|default(0) %}
    {% if printer.configfile.config["bed_mesh " + BED_TEMP] is defined and FORCE|int == 0 %}
        BED_MESH_PROFILE LOAD={BED_TEMP}
        {action_respond_info("succesfully loaded bed_mesh "+ BED_TEMP)}
    {% else %}
        {% if printer.configfile.config["bed_mesh " + BED_TEMP] is defined and FORCE|int == 1 %}
            BED_MESH_PROFILE REMOVE={BED_TEMP}
        {% endif %}
        {action_respond_info("bed_mesh " + BED_TEMP + " not defined, creating a new mesh")}
        {action_respond_info("your bed temperature will go up!")}
        BED_MESH_ADD BED_TEMP={BED_TEMP}
        {action_respond_info("bed_mesh " + BED_TEMP + " created")}
    {% endif %}


#==============================================
# BED_MESH_LIST
#==============================================
[gcode_macro BED_MESH_LIST]
gcode:
    {action_respond_info("stored meshes:")}
    # iterate config items
    {% for key, value in printer.configfile.config.iteritems() %}
        # if item is a bed_mesh print to terminal
        {% if key.startswith("bed_mesh ") %}
            {action_respond_info(key)}
        {% endif %}
    {% endfor %}

#==============================================
# BED_MESH_CLEAR_ALL
#==============================================
[gcode_macro BED_MESH_CLEAR_ALL]
gcode:
    {action_respond_info("I will delete all stored meshes")}

    # itrate config items
    {% for key, value in printer.configfile.config.iteritems() %}
        {% if key.startswith("bed_mesh ") %}
            # if item is a bed_mesh delete it
            {action_respond_info("Deleting mesh: " + key[9:])}
            BED_MESH_PROFILE REMOVE={key[9:]}
        {% endif %}
    {% endfor %}

    # save config
    {action_respond_info("WARNING, YOUR PRINTER WILL SAVE AND RESTART!")}
    G4 P250 ;wait for display
    SAVE_CONFIG

#==============================================
# BED_MESH_OUTPUT
#==============================================
[gcode_macro G81]
gcode:
    BED_MESH_OUTPUT